

/* @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Heebo:wght@300;400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Catamaran:wght@300;400;500;700&display=swap'); */
@import url('https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,600;0,700;1,400&display=swap');

body {
    background-color: black;
    color: #0aa;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-size: medium;
}

html,
body {
    width: 100%;
    height: 100%;
    border: 0;
    padding: 0;
    margin: 0;
}
*:focus {
    outline: none;
}
a:link,
a:visited {
    text-decoration: none;
}

ul {
    list-style: none;
    padding: 10px;
    margin:0;
}

input[type="text" i],
input[type="password" i]
 {
    background-color: #444;
    border: 2px solid #055;
    color: #0cc;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: normal;
    font-size: small;
    margin: 2px;
}
input[type="text" i]:focus,
input[type="password" i]:focus
{
    border: 2px solid #0cc;
}

/* input[type="number" i] {
    background-color: #444;
    border: 2px solid #055;
    color: #0cc;
    font-family: 'Overpass', sans-serif; 
    font-weight: normal;
    font-size: small;
    margin: 2px;
}
input[type="number" i]:focus {
    border: 2px solid #0cc;
}*/

button {
    background-color: #444;
    border: 1px solid #888;
    color: #0bb;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: bold;
    font-size: small;
    margin: 2px;
    border-radius: 6px;
    cursor:pointer;
}
button:focus {
    border: 1px solid #0ff;
}

.validationError {
    color:red;
}

#allContentContainer
{
    height: 100vh;
    width: 100%;
}

/* https://grid.layoutit.com/ */
#grid-container {
    height: 100vh;
    width: 100%;

    display: grid;
    grid-template-columns: 270px minmax(0, 1fr) 320px; /* minmax(0,..) avoids keyboard content from increasing cell size.https://css-tricks.com/preventing-a-grid-blowout/ */
    grid-template-rows: 0fr 1fr 0fr 0fr;
    gap: 5px 5px;
    grid-template-areas:
        "headerArea headerArea headerArea"
        "leftArea roomArea rightArea"
        "leftArea chatArea rightArea"
        "leftArea pianoArea rightArea";
}
#grid-container.wide {
    grid-template-columns: 270px minmax(0, 1fr) 550px; /* minmax(0,..) avoids keyboard content from increasing cell size.https://css-tricks.com/preventing-a-grid-blowout/ */
}

#grid-container.noright {
    grid-template-columns: 270px minmax(0, 1fr) 10px; /* minmax(0,..) avoids keyboard content from increasing cell size.https://css-tricks.com/preventing-a-grid-blowout/ */
}

#grid-container.wide #rightArea input[type="range"]
{
    width:350px;
}

#grid-container>* {
    background-color: #222;
}

.roomArea {
    background-color: black;
    color: #339;
    background-repeat: no-repeat;
    position: relative;
    overflow:hidden;
    transition: background-position 1s;
    display: flex;
    justify-content: center;
    align-items: flex-start; /* announcement area fix */
}

.roomArea.roomWelcomeNoTransition {
	transition: background-position 0s;
}

#leftArea,
#rightArea {
    display: flex;
    flex-direction: column;    
    overflow-y:auto;
}

@keyframes screenFadeOut {
    10% { opacity: 100%}
    100% { opacity: 0%; }
}

#roomArea {
    background-color: black;
}

#roomArea .screen {
    background-color: black;
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    opacity: 100%;
    animation: screenFadeOut 1s 1;
    animation-fill-mode: forwards;
}

.component {
    width: 100%;
    color: #0aa;
    border: 4px solid #044;
    box-sizing: border-box;
    margin-bottom: 20px;
    border-radius: 5px;
}

.component>h2 {
    background-color: #044;
    padding-left: 5px;
    margin: 0;
    border: 0;
    font-size: larger;
    overflow: hidden; /* allows floated content to increase div height https://stackoverflow.com/questions/2159843/how-to-make-div-height-increase-to-include-floated-image*/
}

.component>h2 .buttonContainer {
    float:right;
    line-height: 10px;
}

.component>h2 button {
    font-weight: normal;
    background-color: #033;
    border: 1px solid #066;
    font-size: x-small;
}

.clipboardControls {
    border: 0;
    background-color: #022;
    border-radius: 10px;
    margin-bottom: 10px;
}


.clipboardControls legend {
    font-size: small;}

#roomArea .component {
    margin-top:30px;
}

.userPing {
    font-size: smaller;
    font-style: italic;
    font-weight: normal;
}

.headerArea {
    padding: 3px;
    display: flex;
    justify-content: space-between;
}
.headerArea>span {
    margin:0;
    margin-left:20px;
    margin-right:20px;
    font-size: small;
    display: inline-flex;
    align-items: center;
}

.headerArea .headerTitle {
    font-size: 20px;
    color: #cc0;
    font-weight: bold;
}

.headerArea a:link,
.headerArea a:visited,
.headerArea a {
    color: #088;
}

@keyframes avatarBump1 {
    0% {
        transform: translate(-50%, -50%);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(-50%, calc(-50% + 4px));
    }

    100% {
        transform: translate(-50%, -50%);
    }
}

/* exact duplicate of the other, so when i toggle between the classes, it resets the animation. why doesn't CSS let you reset one-shot animations?? */
@keyframes avatarBump2 {
    0% {
        transform: translate(-50%, -50%);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(-50%, calc(-50% + 4px));
    }

    100% {
        transform: translate(-50%, -50%);
    }
}


.userAvatarActivityBump1 {
    animation: avatarBump1 .2s 1;
}

.userAvatarActivityBump2 {
    animation: avatarBump2 .2s 1;
}

.userAvatar {
    pointer-events: none; /* allow clicks to be processed by the room itself, not the item. */
    position: absolute;
    transition: top .5s, left .5s;
    border-radius: 5px;
    border-width: 1px;
    border-style: solid;
    padding: 7px;
    background-color: rgba(0, 0, 0, .5);
    text-align: center;
    filter: drop-shadow(0px 10px 5px rgba(0, 0, 0, .7));
    transform: translate(-50%, -50%); /* this puts the "origin" of the element in the center. */
}

.userAvatar.me {
    border-top-width: 10px;
}

.userAvatar.roomWelcomeNoTransition {
	transition: top 0s, left 0s;
}

.userAvatar .userAvatarInstrument button {
    pointer-events: all;
}

#chatArea {
    display:flex;
}

#chatArea input {
    flex-grow:1;
}

.shortChatLog {
    position: absolute;
    bottom: 0;
    width:100%; /* important because if you have 1 message that cannot be wrapped, it will make the chat log area grow wider, and everyone's messages will get cutoff. this allows other long messages to still wrap.*/
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;/*stroke*/
    color: #aaa;
    pointer-events: none;

    -webkit-mask-image: linear-gradient(transparent, transparent 25%, rgba(0, 0, 0, 1.0) 60%, rgba(0, 0, 0, 1.0));
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}


.fullChatLog {
    overflow-y: scroll;
    position: absolute;
    bottom: 0;
    width:100%; /* important because if you have 1 message that cannot be wrapped, it will make the chat log area grow wider, and everyone's messages will get cutoff. this allows other long messages to still wrap.*/
    /*text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;/*stroke*/
    color: #aaa;
    background-color: #000000d4;

    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}
.fullChatLog ul {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;    
}

/*  button.switchChatView */
.switchRoomViews
{
    position:absolute;
    top:0;
    right:40px;
    display:flex;
    flex-direction: column;
}

#pianoArea {
    overflow-y:hidden;
    height:110px;

    display: flex;
    align-items: flex-end;
    justify-content: center;
}


#announcementArea {
    color: #be62ec;
    text-align: center;
    background-color: #00000087;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    pointer-events: none;
}

@keyframes blinker3 { to { opacity: 0; } }

#roomAlertArea {
    color: #ff0000;
    text-align: center;
    background-color: #000000C0;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    padding: 15px;
    font-size: 32px;
    font-weight: bold;
    margin-top: 5px;
    z-index: 100000;
    position: relative;
}
#roomAlertArea button {
    font-size: large;
}

#roomAlertArea > span {
    animation: blinker3 .8s ease-in-out infinite alternate;     
}

.chatLogEntryAggregate,
.chatLogEntryNick,
.chatLogEntryJoin,
.chatLogEntryPart {
    font-style: italic;
    font-size: smaller;
    opacity:50%;
    font-weight: normal;
}

.chatLogEntryChat .messageBody
{
    margin-left:4px;
}

.chatLogEntryChat .timestamp {
    color:#888;
    margin-right:4px;
}

.chatLogEntryChat .userName {
    white-space: nowrap;
}

.chatLogEntryChat .messageBody a,
.chatLogEntryChat .messageBody a:link,
.chatLogEntryChat .messageBody a:visited,
.chatLogEntryChat .messageBody a:hover
{
    color:#cc0;
    text-decoration: none;
    pointer-events: auto;
}

.chatLogEntryChat.server .messageBody {
    font-size: larger;
    color:#6dd;
}

.chatLogEntryChat.server .serverTag {
    color: #aa0;
    font-weight: bold;
}


button.muteButton,
button.muteButton:focus
{
    border:0;
}


.userName {
    display: inline-flex;
    align-items: center;
    white-space: nowrap;
}

.userName.online {
    font-weight: bold;
}

.moreOfflineUserIndicator,
.lessOfflineUserIndicator {
    font-style: italic;
    cursor: pointer;
}

.moreOfflineUserIndicator:hover,
.lessOfflineUserIndicator:hover {
    font-style: italic;
    background-color: #044;
}

.userName .role {
        margin-left: 3px;
        margin-right: 3px;
        font-size: x-small;
        background-color: #555;
        color: #ccc;
        padding: 2px;
        border-radius: 6px;
        padding-left: 3px;
        padding-right: 3px;
}

  .cheer {
    position:absolute;
    pointer-events:none;
  }
  #cheerControl {
      position:absolute;
      top:0;
      left:0;
  }
  #cheerControl input[type="text" i]
  {
      width:2em;
  }
  #cheerControl .cheerButton {
    background-color: #444;
    border: 1px solid #888;
    color: #0bb;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: bold;
    font-size: small;
    margin: 2px;
    border-radius: 6px;
    padding:2px;
    display:inline;
    cursor:pointer;
  }
  
  @keyframes floatY0 {
    to {transform: translateY(50px);}
  }
  @keyframes floatX0 {
    to {transform: translate(150px);}
  }
  
  @keyframes floatY1 {
    to {transform: translateY(-150px);}
  }
  @keyframes floatX1 {
    to {transform: translate(-150px);}
  }
  @keyframes floatOpacity {
    to {opacity: 0;}
  }
  
  #audioVisCanvas {
      width:200px;
      height:128px;
  }
  
.idleIndicator {
    color: #aaa;
    font-size:smaller;
    font-style: italic;
}

ul.instParamList {
    white-space: nowrap;
    overflow-x: hidden;
}

ul.instParamList label {
    font-size:smaller;
    color:#ccc;
    cursor: pointer;
    display: inline-flex; /* helps control param value display when there are mappings showing */
}

ul.instParamList input[type="range" i] {
    margin:0;
}

ul.instParamList li.buttonsParam {
    /* allow button types to wrap */
    white-space: normal;
}

ul.instParamList li.buttonsParam.sfzSelect {
/*    display: flex;
    flex-direction: column;*/
}

ul.instParamList li.buttonsParam.sfzSelect button {
    display:block;
}

.instParamGroup {
    margin: 0;
    padding: 1px;
    min-inline-size: auto;
    border: 2px solid #003838;
    border-radius: 15px;
    background: linear-gradient(to bottom, #00cccc15, #00cccc07);
}
.instParamGroup.modulation {
    background-color: #333;
}
.instParamGroup.modulation legend {
    color: #66c;
}

.instParamGroup.disabled {
    background-color: #222;
    border: 2px solid #333;
    background: none;
}
.instParamGroup.disabled legend {
    color: #555;
}


.wide .instParamGroup {
    margin:10px;
}
.instParamGroup legend {
    border-radius: 6px;
    cursor: pointer;
    padding-right: 20px;
}
.instParamGroup legend:hover {
    background-color: #00666660;
}

.instParamGroup  .instParamGroupNameAnnotation {
    color: #888;
    font-style: italic;
    font-size: small;
}

.instParamList .paramSpacer {
    margin-top:15px;
}
.instParamList .paramSpacer:first-child {
    margin-top:0;
}



.presetList {
    padding:8px;
}

.presetList ul {
    padding:0;
}


.presetList li,
.presetListControls li {
    font-size: smaller;
    color: #aaa;
    background-color: #044;
    padding: 6px;
    margin: 0;
    margin-bottom: 2px;
    white-space: normal;
}


.presetList li:hover,
.presetList li:active
 {
    background-color: #066;
}

.presetList .presetName
{
    font-weight: normal;
    color: #ccc;
    white-space: nowrap;
}
.presetList .author,
.presetList .savedDate,
.presetList .description,
.presetList .tags
{
    font-weight: normal;
    font-style: italic;
    font-size: x-small;
    color:#888;
    display:inline;
}
.presetList .description
{
    display:block;
}
.presetList .description
{
    color:#0aa;
    font-size: small;
}

.presetList .authorAndDateBox {
    
}

.presetList ul {
    position:relative;
}

.presetList ul .buttonContainer {
    position:absolute;
    right:0;
}

.presetList li button
{
    visibility: hidden;
    border:0;
    font-weight: normal;
}
.presetList li:hover button
{
    visibility: visible;
}

.presetList li button:active
{
    background-color:#088;
}
.presetList li button:hover,
.presetList li button:focus
{
    background-color:#033;
}



.roomItem {
    border:5px solid blue;
    box-sizing: border-box;
    background:#00000061;
    text-align: center;
    position: absolute;
    transition: top 1s, left 1s;
    pointer-events: none; /* allow clicks to be processed by the room itself, not the item. */
    cursor: pointer;
    color: #dd0;
    font-weight: bold;
}

.roomItem.roomWelcomeNoTransition
{
    transition: top 0s, left 0s;
}

.roomSign {
    position: absolute;

    border-radius: 6px;
    border: 0px;
    box-sizing: border-box;
    padding: 15px;
    transition: top 1s, left 1s;
    transform: translate(-50%, -110%); /* this puts the "origin" of the element in the center. */

    background:#00000080;
    font-size: 16px;
    text-align: center;
    color: #dd0;
}

.roomSign a:link,
.roomSign a:visited {
    color: #dd0;
}


.component.userList h2 {
    color:#066;
    margin-bottom:8px;
}
.component.userList h2 .roomName{
    color:#0aa;
}
.component.userList h2 .userCount,
.component.userList h2 .noteOns {
    color:#088;
}


.component.userList ul.onlineUserList {
    padding-bottom: 0;
    padding-top:0;
}

.component.userList ul.offlineUserList {
    opacity: 75%;
    padding-bottom: 0;
    padding-top:0;
}


.component.userList ul.onlineUserList .presenceIndicator {
    color:#47c447; /* discord color with differet hue*/
    font-size: 30px;
    line-height: 0;
    vertical-align: middle;
    padding-right: 8px;
}

.component.userList ul.offlineUserList .presenceIndicator {
    color:#4752c4; /* discord color */
    font-size: 30px;
    line-height: 0;
    vertical-align: middle;
    padding-right: 8px;
}

.component.userList .roomHeaderStats
{
    color: #066;
    font-size: medium;
    margin-left: 10px;
}

ul.otherRoomUserList .presenceIndicator {
    color:#47c447; /* discord color with differet hue*/
    font-size: 30px;
    line-height: 0;
    vertical-align: middle;
    padding-right: 8px;
}


.worldStatus .room {
    margin:10px;
    color:#066;
}
.worldStatus .room .roomName
{
    font-weight: bold;
}
.worldStatus .room .roomName
{
    color:#0aa;
}
.worldStatus .room .userCount,
.worldStatus .room .noteOns
{
    color:#088;
}


div.paramFilter input[type="text"]
{
    width: 50px;
    display:inline;

}

div.presetFilter {
    display:inline;
}
div.presetFilter input[type="text"]
{
    width: 50px;
    display:inline;
}


.paramGroupFocusBtn,
.paramGroupFocusBtn:active,
.paramGroupFocusBtn:focus
{
    border:0;
    font-weight: normal;
}

.paramGroupFocusBtn.active {
    background-color: #077;
}




.buttonParam,
.buttonParam:active,
.buttonParam:focus
{
    border:0;
    font-weight: normal;
}

.buttonParam.active {
    background-color: #066;
}

.buttonParam:hover
{
    background-color: #088;
}



.paramGroupCtrl {
    border: 0;
    font-size: small;
    position:sticky;
    position:-webkit-sticky;
    top:0px;
    padding-top:4px;
    background-color: #222;
    z-index: 9900;
}


.groupFocusButtons {
    background-color: black;
    border-radius: 10px;
    border: 0;
}



input[type="range"].floatParam,
input[type="range"].intParam
 {
    border: 0;
    border-radius: 8px;
    height: 8px;
    outline: none;
    -webkit-appearance: none;
}

input[type="range"].floatParam::-webkit-slider-thumb,
input[type="range"].intParam::-webkit-slider-thumb
{
    -webkit-appearance: none;
    background: #0aa;
    height: 14px;
    width: 14px;
    cursor: pointer;
    border-radius: 100%;
}

.modAmtParam input[type="range"].floatParam,
.modAmtParam input[type="range"].intParam
{
    height: 4px;
}

.modAmtParam input[type="range"].floatParam::-webkit-slider-thumb,
.modAmtParam input[type="range"].intParam::-webkit-slider-thumb
{
    background: #aaa;
    height: 9px;
    width: 9px;
}



.instPresetButtons {
    white-space: normal;
}

.instPresetButtons button {
    border:0;
    cursor: pointer;
    font-weight: normal;
}

.instPresetButtons .confirmationBox,
.presetList .confirmationBox
{
    color: #8cc;
    padding: 10px;
    border-radius: 0;
    border: 1px solid #a00;
    background-color: #200;
    white-space: normal;
    border-left: 7px solid #a00;
}

.instPresetButtons .confirmationBox button,
.presetList .confirmationBox button
{
    visibility: visible;
    background-color: #266;
    color: #000;
    padding: 5px;
}

.instPresetButtons .confirmationBox button:hover,
.instPresetButtons .confirmationBox button:focus,
.presetList .confirmationBox button:hover,
.presetList .confirmationBox button:focus
{
    background-color: #acc;
}
/* 
.topRightControls {
    white-space: nowrap;
}
.topRightControls label {
    display: inline-block;
    width: 80px;
}
 */




li.dropdownParam {
    font-size: small;
}

li.dropdownParam .mainButton {
    cursor:pointer;
    margin: 4px;
    background-color: #022;
}
li.dropdownParam .mainButton:hover {
    background:#066;
}
li.dropdownParam .mainButton .arrow {
    
}
li.dropdownParam .mainButton .currentValue {
    
}
li.dropdownParam ul.dropdown {
    background-color: #022;
    margin-left: 15px;  
    padding: 0;
    padding-left: 10px;  
}
li.dropdownParam ul.dropdown li {
    padding: 2px;
    cursor: pointer;
}
li.dropdownParam ul.dropdown li.active {
    background-color: #044;
}

li.dropdownParam ul.dropdown li:hover {
    background-color: #066;
}
li.dropdownParam ul.dropdown li.active:hover {
    background-color: #066;
}


li.cbxparam {
    display:inline;
}

li.cbxparam button {
    border: 0;
}

li.cbxparam.on button {
    background-color: #088;
}


li.cbxparam button:hover {
    background-color: #066;
}



li.oscEnableButton {
    display: inline-block;
    margin: 3px;
}

ul.instParamList li.inlineLabel
{
    display:inline;
}

.instParamGroup .groupControls {
    white-space: normal;
    margin-bottom: 4px;
    border-bottom: 2px dotted #055;
    padding-bottom: 4px;
}

.instParamGroup .groupControls button {
    border: 0;
    font-weight: normal;
    font-size: x-small;
    color: #888;
    line-height: 15px;
}

.instParamGroup .groupControls button:hover {
    background-color:#066;
}


.component.instrumentCloset>ul {
    overflow-x: hidden;
}

.component.instrumentCloset li.instrument {
    position:relative;
    padding: 3px;}
.component.instrumentCloset li.instrument:hover {
    background-color:#044;
}

.component.instrumentCloset li.instrument.bigClick {
    cursor: pointer;
}


.component.instrumentCloset li.instrument button,
li.floatParam .paramMappingBox button
{
    border:0;
    background-color: #066;
    color: #0cc;
}
.component.instrumentCloset li.instrument button:hover,
li.floatParam .paramMappingBox button:hover
{
    background-color: #088;
    color: #0cc;
}

.component.instrumentCloset li.instrument .buttonContainer {
    position:absolute;
    right:0;
    z-index: 9999;
    visibility: hidden;
}

.component.instrumentCloset li.instrument:hover .buttonContainer {
    visibility: visible;
}


.component.instrumentCloset li.instrument:hover .buttonContainer span {
    color: #077;
    background-color: #044;
    font-family: 'Overpass', sans-serif;
    font-weight: bold;
    margin: 2px;
    border-radius: 6px;
    font-style: italic;
}



.component.instrumentCloset li.instrument .takenBy {
    font-size: small;
    font-style: italic;
    opacity: 50%;
}




li.floatParam .paramMappingBox {
    white-space: normal;
    margin: 0;
    padding: 5px;
    background-color: #ffb8002b;
    font-size: small;
}

li.floatParam .paramMappingBox .learningIndicator {
    color: #8cc;
    padding: 10px;
    border-radius: 0;
    border: 1px solid #a00;
    background-color: #200;
    white-space: normal;
    border-left: 7px solid #a00;
}


li.floatParam.expanded { /* no mapping */
    border: 1px solid #0aa;
    border-radius: 5px;
}

li.floatParam.hasMapping,
li.floatParam.expanded.hasMapping
{
    border-right: 10px solid #ffb800;
}


.instParamGroup.macros {
    border: 2px solid #ffb80040;
}
.instParamGroup.macros legend {
    color: #ffb80080;
}

.macroMappingList {
    padding: 0;
    font-size: x-small;
    margin:0;
    color:#ffb80080;
}

.midiCCList {

}
.midiCCmappingList {
    padding: 3px;
    font-size: x-small;
    margin-bottom: 4px;
    color:#ffb80080;
}

.paramValueLabel,
.paramValueName {
    display: inline-block;
    vertical-align: middle;
}

.paramValueName.readonly {
    color:#666;
}

.mappedLiveValue {
    color: #ffb800;
    font-size: small;
}


.macroMappingList .mappedLiveValue {
    display:inline;
}
.midiCCmappingList .mappedLiveValue    {
    display:inline;
}


.socicon {
    height: 24px;
    fill: #0aa;
    padding-left: 12px;
    padding-right: 12px;
    padding-top:4px;
    padding-bottom: 4px;
}

.socicon:hover {
    background-color: #055;
    fill: #0aa;
}

.logoTxt {
    font-size: medium;
    font-weight: bold;
    margin-right: 16px;
}

.signinScreen {
    min-width: 400px;
}

.userSettingsGoogleSignInContainer
{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    margin-top: 20px;
    border: solid 3px #033;
    padding: 6px;
}

.homeGoogleSignInContainer
{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.googleLoginButton {
    background-image: url('/google_signin_buttons/web/1x/btn_google_signin_dark_normal_web.png');
    display: inline-block;
    width: 191px;
    height: 46px;
    border: 0;
    border-radius:0;
 }
 .googleLoginButton:hover {
    background-image: url('/google_signin_buttons/web/1x/btn_google_signin_dark_focus_web.png');
    cursor: pointer;
    border: 0;
    border-radius:0;
 }
 .googleLoginButton:active {
    background-image: url('/google_signin_buttons/web/1x/btn_google_signin_dark_pressed_web.png');
    border: 0;
    border-radius:0;
 }
 .googleLoginButton:disabled {
    background-image: url('/google_signin_buttons/web/1x/btn_google_signin_dark_disabled_web.png');
    border: 0;
    border-radius:0;
 }

 .homeGoogleSignInContainer .googleLoginButton
 {
     margin-top: 20px;
 }
 
  
button.stayLoggedIn {
    border: 0;
    color: #aaa;
    background: none;
}

button.stayLoggedIn.on {
    color: #0dd;
    background-color: #044;
}

button.stayLoggedIn:hover {
    background-color: #066;
}


 /* https://loading.io/css/ sign-in page progress indicator */
 .lds-facebook {
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
  }
  .lds-facebook div {
    display: inline-block;
    position: absolute;
    left: 8px;
    width: 16px;
    background: #0cc;
    animation: lds-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;
  }
  .lds-facebook div:nth-child(1) {
    left: 8px;
    animation-delay: -0.24s;
  }
  .lds-facebook div:nth-child(2) {
    left: 32px;
    animation-delay: -0.12s;
  }
  .lds-facebook div:nth-child(3) {
    left: 56px;
    animation-delay: 0;
  }
  @keyframes lds-facebook {
    0% {
      top: 8px;
      height: 64px;
    }
    50%, 100% {
      top: 24px;
      height: 32px;
    }
  }

  
.userMgmtGearIcon 
{

}

.dropdownMenu
{
    position:relative;
}

.creditsDialog,
.userSettingsDialog,
.optionsDialog,
.popUpDialog {
    padding: 10px;
    position: absolute;
    font-size: 16px;
    z-index: 9991;
    width: 450px;
    background-color: #111111e8;
    text-align: left;
    box-sizing: content-box;
    border: 3px solid #088;
    border-radius: 10px;
    border-top-left-radius:0;
}

.creditsButton,
.dropdownMenuButton,
.userSettingsButton {
    display:inline-block;
    background-color: #033;
    padding: 4px;
    border: 1px solid #066;
    border-radius: 5px;
    margin: 0;
    margin-right: 20px;
    padding-left: 10px;
    padding-right: 10px;
    cursor: pointer;
}

.popUpDialog fieldset {
    border-radius: 6px;
    border: 0;
    background: #022;
    margin-bottom: 5px;
}

.popUpDialog fieldset .legend {
    color:#aa0;
    font-weight: bold;
}


.userSettingsButton {
    font-weight: bold;
}

.dropdownMenu.right .popUpDialog /* buttons on right */
{
    right:0;
}
.userSettings .colorSwatchRow {
    display: flex;
}

.userSettings .colorSwatch {
    width:24px;
    height:24px;
    display:inline-block;
}

.creditsDialog pre {
    font-size:medium;
}

.creditsButton {
    color: #0cc;
    border: 0;
}

.creditsButton.expanded,
.dropdownMenuButton.expanded
{
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom: 0;
}


.dropdownMenuButton:hover
{
    background-color: #055;
}

.optionsDialog .component {
    border:0;
}

.optionsDialog .component h2 {
    margin: 0;
    border: 0;
    font-size: small;
    border-bottom: 2px dotted #066;
    display: inline-block;
    background-color: transparent;
    color: #0aa;
    padding: 0;
}

button.quantizationOption {
    padding-top: 0;
    padding-bottom: 0;
    width:35px;


    /* font-size: 30px;
    line-height: 40px;
    height:40px; */
}

div.quantizationGroup {
    display:block;
}

.optionsDialog .helpText {
    color: #888;
    font-style: italic;
}
.optionsDialog input[type="range"] {
    width:250px;
}

.headerArea>span.optionsBtnContent {
    display: flex;
    align-items: baseline;
}

/* space between items in the options button */ 
.optionsBtnContent span ~ span {
    padding-left: 10px;
}

.headerArea span.quantizationValue
 {
    font-size: 30px;
    height: 30px;
    /* line-height makes sure the text doesn't stretch the height of the container. */
    line-height: 0;
}

.quantizationValue
 {
    font-size: 30px;
    height: 35px;
    line-height: 0;
}

ul.instParamList .instControlledBy
{
    display:block;
    height:20px;
    font-size: small;
}

ul.instParamList .instActivity
{
    display:block;
    height:10px;
    width:10px;
    border-radius: 50%;
}

@keyframes mixerActivityBump1 {
    0% {
        opacity: 1.0;
        animation-timing-function: ease-in-out;
    }
    100% {
        opacity: 0.0;
    }
}

/* exact duplicate of the other, so when i toggle between the classes, it resets the animation. why doesn't CSS let you reset one-shot animations?? */
@keyframes mixerActivityBump2 {
    0% {
        opacity: 1.0;
        animation-timing-function: ease-in-out;
    }
    100% {
        opacity: 0.0;
    }
}


ul.instParamList .instActivity.alt1 {
    opacity: 0.0;
    background-color:orange;
    animation: mixerActivityBump1 .5s 1;
}

ul.instParamList .instActivity.alt2 {
    opacity: 0.0;
    background-color:orange;
    animation: mixerActivityBump2 .5s 1;
}

.instrumentCloset .instrumentLoadingIndicator {
    background-color: #444;
    color: #aaa;
    padding: 4px;
    border-radius: 10px;
    font-size: small;
}



#rightArea .instrumentLoadingIndicator {
    font-size: x-small;
    margin: 4px;
    margin-top:1px;
    margin-bottom:1px;
    background-color: #a04;
    border-radius: 6px;
}

#rightArea .instrumentLoadingIndicator.hidden {
    visibility: hidden;
}

#rightArea .instrumentLoadingIndicator .doneSegment {
    text-align: center;
    background-color: #0a4;
    color: white;
    border-radius: 6px;
}

.optionsBtnContent .quantIndicator {
    color:orange;
}


li.preloadSFZ {
    padding-top:5px;
    margin-top:5px;
    border-top:2px dotted #077;
}
/* li.updateAboveStuff {
    padding-bottom:5px;
    margin-bottom:5px;
    border-bottom:2px dotted #077;
} */

.liveRoomBeat {
    background-color:#022;
    cursor: pointer;
    display:flex;
}

.liveRoomBeat .beat {
    height: 18px;
    width: 30px;
    background-color: transparent;
    border: 2px solid #066;
    display: flex;
    align-items: center;
    justify-content: center;
}

@keyframes liveRoomBeatFlash {
    0% { background-color:#0ff; }
    100% { background-color:#066; }
}

.liveRoomBeat .beat.complete {
    background-color: #066;
    border-left:2px solid #0ff;
    animation: liveRoomBeatFlash 0.2s;
}

.liveRoomBeat .beat.inProgress {
    border-left:2px solid #0ff;
}


.discordChatMsgIndicator {
    width:16px;
}


#gestureSplash {
    position: absolute;
    height: 100vh;
    width: 100%;
    background-color: #0008;
    z-index: 10000;
    display: flex;
    flex-direction: row;
    align-content: stretch;
    justify-content: stretch;
    align-items: stretch;
    overflow: hidden;
}

#gestureSplash2 {
       background-color: #000d;
       flex-grow: 1;
       display: flex;
       flex-direction: row;
       margin: 25vh;
       align-content: center;
       justify-content: center;
       align-items: center;
       border-radius: 10vh;
       border: 10px solid #044;
}

#splashLogo {

}
#splashTextContainer {

}
#splashTitle {

    font-size: 48px;
    font-weight: bold;
    color: #cc0;
    letter-spacing: -1px;
}
#splashClickToContinue {
    font-style: italic;
    font-weight: bold;
}


